/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
!function() {
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// // Import vendor jQuery plugin example
// import '~/app/libs/mmenu/dist/mmenu.js'

document.addEventListener('DOMContentLoaded', function () {
  //Страница Hanky Code.
  //Swiper из второго блока
  var swiperLeftAuto = new Swiper('.swiper-left-auto', {
    a11y: false,
    direction: 'horizontal',
    loop: true,
    speed: 7000,
    spaceBetween: 50,
    slidesPerView: 'auto',
    freeMode: true,
    autoplay: {
      delay: 0,
      disableOnInteraction: false
    },
    noSwiping: true,
    noSwipingClass: 'swiper-slide'
  });

  //Swiper из второго блока
  var swiperLeftAuto2 = new Swiper('.swiper-left-auto2', {
    a11y: false,
    direction: 'horizontal',
    loop: true,
    speed: 11000,
    spaceBetween: 50,
    slidesPerView: 'auto',
    freeMode: true,
    autoplay: {
      delay: 0.2,
      disableOnInteraction: false
    },
    noSwiping: true,
    noSwipingClass: 'swiper-slide'
  });
  var swiperContainer1 = document.querySelector('.swiper-left-auto');
  var swiperContainer2 = document.querySelector('.swiper-left-auto2');
  if (swiperContainer1 && swiperContainer2) {
    swiperContainer1.addEventListener('mouseenter', function () {
      swiperLeftAuto.autoplay.stop();
    });
    swiperContainer1.addEventListener('mouseleave', function () {
      swiperLeftAuto.autoplay.start();
    });
    swiperContainer2.addEventListener('mouseenter', function () {
      swiperLeftAuto2.autoplay.stop();
    });
    swiperContainer2.addEventListener('mouseleave', function () {
      swiperLeftAuto2.autoplay.start();
    });
  }

  //Swiper из третьего блока
  var swiperEffectCards = new Swiper(".swiper-effect-card", {
    effect: "cards",
    grabCursor: true,
    slidesPerView: "auto",
    centeredSlides: true,
    noSwiping: true,
    noSwipingClass: 'swiper-slide',
    cardsEffect: {
      perSlideOffset: 15,
      rotate: false,
      slideShadows: true
    }
  });

  //Swiper из третьего блока в popup окне
  var swiperEffectCards2 = new Swiper(".swiper-effect-card2", {
    grabCursor: true,
    slidesPerView: 1,
    spaceBetween: 50,
    navigation: {
      nextEl: '.swiper-effect-card2-next',
      prevEl: '.swiper-effect-card2-prev'
    },
    scrollbar: {
      el: '.swiper-effect-card2-scrollbar',
      draggable: true,
      dragSize: 'auto'
    }
  });

  // Переворот карточек swiper-left-auto и swiper-left-auto2
  var slideItems = document.querySelectorAll('.slide-item');
  if (slideItems) {
    slideItems.forEach(function (slide) {
      slide.addEventListener('click', function () {
        this.classList.add('active');
      });
    });
    var slideCloseButtons = document.querySelectorAll('.slide-item-close');
    slideCloseButtons.forEach(function (button) {
      button.addEventListener('click', function (event) {
        event.stopPropagation();
        var slide = this.closest('.slide-item');
        if (slide) {
          slide.classList.remove('active');
        }
      });
    });
  }

  //Кастомный Select
  var CustomSelect = /*#__PURE__*/function () {
    function CustomSelect(selectElement) {
      var _this = this;
      _classCallCheck(this, CustomSelect);
      this.selectElement = selectElement;
      this.selectButton = selectElement.querySelector('.select-button');
      this.selectContent = selectElement.querySelector('.select-content');
      this.options = Array.from(selectElement.querySelectorAll('.options li'));
      this.selectButton.addEventListener('click', function () {
        return _this.toggleOptions();
      });
      this.options.forEach(function (option) {
        option.addEventListener('click', function () {
          return _this.selectOption(option);
        });
      });
      document.addEventListener('click', function (event) {
        return _this.closeOptions(event);
      });
    }
    _createClass(CustomSelect, [{
      key: "toggleOptions",
      value: function toggleOptions() {
        this.selectElement.classList.toggle('active');
      }
    }, {
      key: "selectOption",
      value: function selectOption(option) {
        var selectedText = option.textContent;
        this.selectButton.querySelector('.select').textContent = selectedText;
        this.toggleOptions();
      }
    }, {
      key: "closeOptions",
      value: function closeOptions(event) {
        if (!this.selectElement.contains(event.target)) {
          this.selectElement.classList.remove('active');
        }
      }
    }]);
    return CustomSelect;
  }();
  var customSelects = Array.from(document.querySelectorAll('.custom-select'));
  if (customSelects) {
    customSelects.forEach(function (select) {
      return new CustomSelect(select);
    });
  }

  // Получаем элементы списка
  var selectOptions = document.querySelectorAll('#swiper-select-color .options li');

  // Связывает Select и swiper выбором цвета
  if (selectOptions) {
    selectOptions.forEach(function (option, index) {
      option.addEventListener('click', function () {
        swiperEffectCards.slideTo(index);
      });
    });
  }

  //Кастомный Popup
  var Popup = /*#__PURE__*/function () {
    function Popup(popupElement) {
      var _this2 = this;
      _classCallCheck(this, Popup);
      this.popup = popupElement;
      this.closeBtn = this.popup.querySelector('.custom-popup-close');
      this.closeBtn.addEventListener('click', function () {
        return _this2.close();
      });
      window.addEventListener('click', function (event) {
        if (event.target == _this2.popup) {
          _this2.close();
        }
      });
      window.addEventListener('keydown', function (event) {
        if (event.key === 'Escape') {
          _this2.close();
        }
      });
    }
    _createClass(Popup, [{
      key: "open",
      value: function open() {
        this.popup.classList.add('custom-popup-show');
        document.body.classList.add('overflow-hidden');
      }
    }, {
      key: "close",
      value: function close() {
        this.popup.classList.remove('custom-popup-show');
        document.body.classList.remove('overflow-hidden');
      }
    }]);
    return Popup;
  }();
  if (document.querySelectorAll('.open-popup')) {
    document.querySelectorAll('.open-popup').forEach(function (button) {
      var popupId = button.dataset.popupTarget;
      var popupElement = document.querySelector(popupId);
      var popup = new Popup(popupElement);
      button.addEventListener('click', function () {
        return popup.open();
      });
    });
  }

  //Копируем блок и вставляем в другой.
  var copyBlocks = document.querySelectorAll('.product-left-copy'),
    duplicateBlocks = document.querySelectorAll('.product-left-duplicate');
  if (copyBlocks.length === 0 || duplicateBlocks.length === 0) {
    console.error('Блоки "product-left-copy" или "product-left-duplicate" не найдены');
  } else if (copyBlocks.length !== duplicateBlocks.length) {
    console.error('Количество блоков "product-left-copy" и "product-left-duplicate" не совпадает');
  } else {
    // Копируем содержимое из каждого блока 'product-left-copy' в соответствующий блок 'product-left-duplicate'
    for (var i = 0; i < copyBlocks.length; i++) {
      duplicateBlocks[i].innerHTML = copyBlocks[i].innerHTML;
    }
  }
  var productInfoCopy = document.querySelector('.product-info-copy');
  var productTopCopy = document.querySelector('.product-top-copy');
  var productInfoDuplicate = document.querySelector('.product-info-duplicate');
  var productTopDuplicate = document.querySelector('.product-top-duplicate');
  if (productInfoCopy && productInfoDuplicate) {
    productInfoDuplicate.innerHTML = productInfoCopy.innerHTML;
  } else {
    console.log('Не найдены элементы для копирования и вставки product-info');
  }
  if (productTopCopy && productTopDuplicate) {
    productTopDuplicate.innerHTML = productTopCopy.innerHTML;
  } else {
    console.log('Не найдены элементы для копирования и вставки product-top');
  }

  //Страница Dolls
  //Чтобы считывался клик по favorite на карточке good
  var elementsWrapperFav = document.querySelectorAll('.wrapper-fav');
  elementsWrapperFav.forEach(function (element) {
    element.addEventListener('click', function (event) {
      event.preventDefault();
    });
  });

  //ЭТО СМЕЛО УДАЛЯЙ
  var oceanwpGrid = document.getElementById('oceanwp-grid');
  var oceanwpList = document.getElementById('oceanwp-list');
  var products = document.querySelector('.products');
  if (oceanwpGrid && oceanwpList && products) {
    oceanwpGrid.addEventListener('click', function (event) {
      event.preventDefault();
      oceanwpList.classList.remove('active');
      oceanwpGrid.classList.add('active');
      if (!products.classList.contains('grid')) {
        products.classList.remove('list');
        products.classList.add('grid');
      }
    });
    oceanwpList.addEventListener('click', function (event) {
      event.preventDefault();
      oceanwpGrid.classList.remove('active');
      oceanwpList.classList.add('active');
      if (!products.classList.contains('list')) {
        products.classList.remove('grid');
        products.classList.add('list');
      }
    });
  }
});
}();
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
!function() {
/* главная категории */
var swiper = new Swiper(".my-swiper-category", {
  slidesPerView: 7,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-category',
    prevEl: '.swiper-button-prev-category'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 2,
      spaceBetween: 0,
      slidesPerGroup: 1
    },
    1024: {
      slidesPerView: 7,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* главная Best-Selling   */

var swiper = new Swiper(".my-swiper-best-selling", {
  slidesPerView: 4,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-best-selling',
    prevEl: '.swiper-button-prev-best-selling'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 1,
      spaceBetween: 0,
      slidesPerGroup: 1
    },
    1024: {
      slidesPerView: 4,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* главная Superstore */

var swiper = new Swiper(".my-swiper-superstore", {
  slidesPerView: 1,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-superstore',
    prevEl: '.swiper-button-prev-superstore'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 1,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* главная The lastest */

var swiper = new Swiper(".my-swiper-lastest", {
  slidesPerView: 4,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-lastest',
    prevEl: '.swiper-button-prev-lastest'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 1,
      spaceBetween: 0,
      slidesPerGroup: 1
    },
    1024: {
      slidesPerView: 4,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* главная Do more */

var swiper = new Swiper(".my-swiper-more", {
  slidesPerView: 2,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-more',
    prevEl: '.swiper-button-prev-more'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 1,
      spaceBetween: 0,
      slidesPerGroup: 1
    },
    1024: {
      slidesPerView: 2,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* главная Shop by group */

var swiper = new Swiper(".my-swiper-group", {
  slidesPerView: 3,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-group',
    prevEl: '.swiper-button-prev-group'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 1,
      spaceBetween: 0,
      slidesPerGroup: 1
    },
    1024: {
      slidesPerView: 3,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* gift card */

var swiper = new Swiper(".my-swiper-gift", {
  slidesPerView: 1,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: true,
  centeredSlides: false,
  navigation: {
    nextEl: '.swiper-button-next-gift',
    prevEl: '.swiper-button-prev-gift'
  },
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  }
});

/* главная категории */

var swiper = new Swiper(".cell-dilivery", {
  slidesPerView: 6,
  slidesPerGroup: 1,
  spaceBetween: 0,
  loop: false,
  centeredSlides: false,
  scrollbar: {
    el: ".swiper-scrollbar",
    hide: false
  },
  breakpoints: {
    0: {
      slidesPerView: 2,
      spaceBetween: 0,
      slidesPerGroup: 1
    },
    1024: {
      slidesPerView: 6,
      spaceBetween: 0,
      slidesPerGroup: 1
    }
  }
});

/* Affiliate program */

var swiper = new Swiper(".swiper-howwork", {
  slidesPerView: 4,
  slidesPerGroup: 1,
  loop: false,
  navigation: {
    nextEl: ".swiper-button-next-how",
    prevEl: ".swiper-button-prev-how"
  },
  breakpoints: {
    0: {
      slidesPerView: 1,
      loop: true
    },
    1024: {
      slidesPerView: 4
    }
  }
});
}();
/******/ })()
;